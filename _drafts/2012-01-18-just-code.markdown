---
layout: post
title: Just Code!
published: false
hn: false
tags:
    - coding
    - programming
    - books
    - learning
---

This is a story. A story about how I learned how to code and make software. It really started a couple of years ago, after always having tried some big names like `c++` and `java`. I bought a programming book or something (with 'I' i mean I asked m parents to buy me one) and tried to learn to programming. It didnt work, at least not for me. I quickly got fed up with how they worked. BUT THEN I FOUND PYTHON. And I am not going to make this a post about Python is better than anything else, becuase lets be honest there is always a different tool for a different problem. It was the first simple programming language that I found on the Internet.

	Note: this post is not meant to help to teach how to program in python but to help people learn how to learn


#### 8pm

I found [ python.org ](http://python.org). Installed the current Python 2 version on my macbook and googled some basic tutorials, mostly from the Python site itself. So i just got used to all the standard functions that I would use pretty often.

#### 9pm

So all that setup stuff took me some time including getting to know the real basics of the language.
At this point of cause I wanted to use it for something useful, well something more or less useful...
In the end I figured I should build a wordlist generator, that basically acts like a brute-force.

So first I built a basic script that jsut runs and writes all possible combinations of the alhabet for 4 letter-words out to a file, with a predetermined name.

{% highlight python %}

letters = ("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")

filename = "combino.txt"
out_file = open(filename, "a")

def generate():
	for i in range(1, (len(letters)+1)):
        pos = number.index(i)
        pval = letters[pos]
        for k in range(1, (len(letters)+1)):
            pos = number.index(k)
            pvalsub1 = pval + letters[pos]
            for l in range(1, (len(letters)+1)):
                pos = number.index(l)
                pvalsub2 = pvalsub1 + letters[pos]
                for m in range(1, (len(letters)+1)):
                    pos = number.index(m)
                    pvalsub3 = pvalsub2 + letters[pos]
                    print pvalsub3 + " : " + str(round((float(((i-1)*len(letters)**3+(k-1)*len(letters)**2+(l-1)*len(letters)+m)/len(letters)**4)*100),3)) + "%"

                    out_file.write(pvalsub3 + "\n")

generate()
{% endhighlight %}


And that would take me like an hour, mostly checking syntax and stuff like that and trying to even get the basic stuff running.

But seeing the program run and do what it is supposed to do made me happy. I suceeded.

#### 10pm

I looked at the program and determined that it wasn't really nice the way it was at this point. I wanted the user to decide how long the produced 'permutations' should be. Unfortunately I did not know the word permutation back than mostly cause i was very young and not going to school in the U.S. yet. If I would have known it a quick `python permutation` [google search](http://docs.python.org/library/itertools.html#itertools.permutations) (1st result) could have saved me all of that work. But back than I was still learning so after some more goggling i found `raw_input()` which seemed to be perfect for me.

{% highlight python %}

letters = ("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")

filename = "combino.txt"
out_file = open(filename, "a")

def generate():
	for i in range(1, (len(letters)+1)):
        pos = number.index(i)
        pval = letters[pos]
        for k in range(1, (len(letters)+1)):
            pos = number.index(k)
            pvalsub1 = pval + letters[pos]
            for l in range(1, (len(letters)+1)):
                pos = number.index(l)
                pvalsub2 = pvalsub1 + letters[pos]
                for m in range(1, (len(letters)+1)):
                    pos = number.index(m)
                    pvalsub3 = pvalsub2 + letters[pos]
                    print pvalsub3 + " : " + str(round((float(((i-1)*len(letters)**3+(k-1)*len(letters)**2+(l-1)*len(letters)+m)/len(letters)**4)*100),3)) + "%"

                    out_file.write(pvalsub3 + "\n")

generate()
{% endhighlight %}

## Conclusion

In the end if you want to learn how to code, don't grab a book dive right into it learn a language and program something simple like this. Although it will be written really badly its going to teach you way more than a book ever could in the same time.